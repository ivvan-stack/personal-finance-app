{"version":3,"sources":["Client.js","GraphQL/Queries.js","Utils/BuildDeck.jsx","Components/Card/index.jsx","assets/img/images.js","assets/img/brand-icon.png","assets/img/roy.jpg","Components/Modal/index.jsx","Components/Aside/index.jsx","Components/Board/index.jsx","Components/Error/index.jsx","Components/Header/index.jsx","Components/Loading/index.jsx","Views/Whats/index.jsx","Views/How/index.jsx","Views/Why/index.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["client","ApolloClient","uri","headers","cache","InMemoryCache","ALL_CHARACTERS","gql","BuildDeck","useQuery","data","loading","error","characters","results","cards","slice","forEach","character","card","id","image","wasGuessed","push","shuffle","Card","state","isFlipped","handleClick","bind","e","preventDefault","this","setState","prevState","className","onClick","props","selectCard","isComparing","disabled","flipDirection","src","urlimg","alt","itemid","Component","Modal","close","aria-label","gameOver","Aside","attemps","resetGame","map","require","getInitialState","deck","pairSelected","itsOver","Board","index","indexOf","length","comparaingPair","setTimeout","firstCard","secondCard","reviewWinner","filter","document","getElementById","Error","Header","role","to","images","icon","aria-expanded","data-target","aria-hidden","target","href","Loading","max","Whats","How","Why","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1d64ba2e.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client';\r\n\r\nconst apiKey = '703cf35a7dmshc982c4c821e6777p1ff3b0jsn1ee918a350d4';\r\n\r\nexport const client = new ApolloClient({\r\n    uri: 'https://rick-and-morty-graphql.p.rapidapi.com/',\r\n    headers: {\r\n        \"content-type\": \"application/json\",\r\n        \"x-rapidapi-key\": apiKey,\r\n        \"x-rapidapi-host\": \"rick-and-morty-graphql.p.rapidapi.com\",\r\n        \"useQueryString\": true\r\n    },\r\n    cache: new InMemoryCache()\r\n});","import { gql } from \"@apollo/client\";\r\n\r\nexport const ALL_CHARACTERS = gql`\r\n  query GetCharacters {\r\n    characters {\r\n      results {\r\n        id\r\n        name\r\n        image\r\n        status\r\n        gender\r\n        episode {\r\n          episode\r\n        }\r\n        species\r\n      }\r\n    }\r\n  }\r\n`;","import shuffle from \"lodash.shuffle\";\r\nimport { ALL_CHARACTERS } from \"../GraphQL/Queries\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nconst BuildDeck = ()=> {\r\n  const { data, loading, error } = useQuery(ALL_CHARACTERS);\r\n\r\n  if (loading) {\r\n    return 'loading'\r\n  } else if (error) {\r\n    return 'error'\r\n  } else if (data) {\r\n    const characters = data.characters.results\r\n    let cards = []\r\n    characters.slice(0, -14).forEach((character)=>{\r\n      const card = {\r\n        id: character.id,\r\n        image: character.image,\r\n        wasGuessed: false\r\n      }\r\n      cards.push(card)\r\n      cards.push({ ...card })\r\n    })\r\n    return shuffle(cards);\r\n  }\r\n}\r\n\r\nexport default BuildDeck;","import React, { Component } from \"react\";\r\nimport ReactCardFlip from 'react-card-flip';\r\n\r\nclass Card extends Component {\r\n  constructor() {\r\n    super();\r\n      this.state = {\r\n      isFlipped: false\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick(e) {\r\n    e.preventDefault();\r\n    this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col-3_md-3_sm-4\" onClick={this.props.selectCard}>\r\n        <ReactCardFlip isFlipped={this.props.isComparing || this.props.wasGuessed} disabled={true} flipDirection=\"horizontal\">\r\n              <div className=\"card memory-card\">\r\n                  <div className=\"card-image\" onClick={this.handleClick}>\r\n                      <figure className=\"image is-4by3\">\r\n                        <h1 className=\"memory-card-title outlined\">?</h1>\r\n                      </figure>\r\n                  </div>\r\n              </div>\r\n              <div className=\"card memory-card\">\r\n                  <div className=\"card-image\" onClick={this.handleClick}>\r\n                      <figure className=\"image is-4by3\">\r\n                          <img src={this.props.urlimg} alt={this.props.itemid}/>\r\n                      </figure>\r\n                  </div>\r\n              </div>\r\n        </ReactCardFlip>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Card","import brand_icon from './brand-icon.png'\r\nimport game_over from './roy.jpg'\r\n\r\nexport default {\r\n    'icon': brand_icon,\r\n    'gameOver': game_over,\r\n}","export default __webpack_public_path__ + \"static/media/brand-icon.5b6c6107.png\";","export default __webpack_public_path__ + \"static/media/roy.68e7978b.jpg\";","import React, { Component } from \"react\";\r\nimport gameOver from '../../assets/img/images'\r\n\r\nclass Modal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { close: false };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState(\r\n      state => ({ close: !state.close })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"modal\" className={`modal ${this.state.close ? 'is-active' : 'invisible'}`}>\r\n        <div className=\"modal-background has-background-dark\" />\r\n        <div className=\"modal-card is-clipped\">\r\n          <article className=\"message is-light\">\r\n            <div className=\"message-header\">\r\n              <p></p>\r\n              <button className=\"delete button button-flat primary small\" aria-label=\"delete\" onClick={() => this.handleClick()} />\r\n            </div>\r\n            <div className=\"message-body\">\r\n            <p className=\"image is-4by3\">\r\n              <img src={gameOver.gameOver} alt=\"Game Over\" />\r\n            </p>\r\n            </div>\r\n          </article>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from \"react\";\r\n\r\nclass Aside extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"panel is-pulled-left col-2_md-12_sm-12 asside-center\">\r\n        <div className=\"notification is-radiusless is-dark\">\r\n          <p className=\"title outlined is-size-3-fullhd is-size-4-widescreen is-size-5-desktop is-size-2-mobile\">Has realizado:</p>\r\n          <p className=\"title outlined is-size-3-fullhd is-size-4-widescreen is-size-5-desktop is-size-2-mobile\">\r\n            <span className=\"title is-size-1 number-of-intents\">{this.props.attemps}</span> intentos\r\n          </p>\r\n          <div className=\"panel-block\">\r\n            <button id=\"reset-game\" className=\"button button-lineal large white\" onClick={this.props.resetGame}>\r\n              Reiniciar juego\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Aside;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"../Card\";\r\nimport Modal from \"../Modal\";\r\nimport Aside from \"../Aside\";\r\nimport shuffle from \"lodash.shuffle\";\r\nvar map = require('array-map');\r\n\r\nconst getInitialState = (data)=> {\r\n  const deck = shuffle(data)\r\n  return {\r\n    deck,\r\n    pairSelected: [],\r\n    isComparing: false,\r\n    attemps: 0,\r\n    itsOver: false\r\n  }\r\n}\r\n\r\nclass Board extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = getInitialState(this.props.cards);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid\">\r\n        <Aside attemps={this.state.attemps} resetGame={() => this.resetGame()} />\r\n        <div className=\"memory-game col-10_md-12_sm-12\">\r\n          <div className=\"grid re-central\">\r\n            {map(this.state.deck, (card, index) => {\r\n              const isComparing = this.state.pairSelected.indexOf(card) > -1;\r\n              return (\r\n                <Card \r\n                key={index} \r\n                itemid={card.id} \r\n                urlimg={card.image} \r\n                isComparing={isComparing}\r\n                selectCard={() => this.selectCard(card)}\r\n                wasGuessed={card.wasGuessed}\r\n                />\r\n              )\r\n            })}\r\n            <Modal \r\n            attemps={this.state.attemps} \r\n            resetGame={() => this.resetGame()}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  selectCard(card) {\r\n    if(this.state.isComparing || this.state.pairSelected.indexOf(card) > -1 || card.wasGuessed) {\r\n      return;\r\n    }\r\n    const pairSelected = [...this.state.pairSelected, card];\r\n    this.setState({\r\n      pairSelected\r\n    })\r\n    if(pairSelected.length === 2) {\r\n      this.comparaingPair(pairSelected)\r\n    }\r\n  }\r\n\r\n  comparaingPair(pairSelected) {\r\n    this.setState({isComparing: true});\r\n    \r\n    setTimeout(() => {\r\n      const [firstCard, secondCard] = pairSelected;\r\n      let deck = this.state.deck;\r\n\r\n      if(firstCard.image === secondCard.image) {\r\n        deck = deck.map((card) => {\r\n          if(card.image !== firstCard.image) {\r\n            return card;\r\n          }\r\n          return {...card, wasGuessed: true}\r\n        });\r\n      }\r\n      this.setState({\r\n        pairSelected: [],\r\n        deck,\r\n        isComparing: false,\r\n        attemps: this.state.attemps + 1\r\n      });\r\n      this.reviewWinner(deck);\r\n    }, 1000)\r\n  }\r\n\r\n  reviewWinner(deck) {\r\n    if(deck.filter((card) => !card.wasGuessed).length  === 0) {\r\n      let modal = document.getElementById('modal');\r\n      modal.className += ' is-active'\r\n    }\r\n  }\r\n\r\n  resetGame() {\r\n    this.setState(\r\n      getInitialState(this.props.cards)\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;","import React from \"react\";\r\n\r\nexport const Error = () => {\r\n    return (\r\n        <article className=\"message is-danger\">\r\n            <div className=\"message-header\">\r\n                <p>Upps!</p>\r\n                <button className=\"delete\" aria-label=\"delete\" />\r\n            </div>\r\n            <div className=\"message-body\">\r\n                ¡Ha ocurrido un error! <br/>\r\n                ¡No eres tu, somos nosotros!\r\n            </div>\r\n        </article>\r\n    )\r\n};\r\n\r\nexport default Error;","import React, { Component } from \"react\";\r\nimport images from \"../../assets/img/images\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {close: false};\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() { \r\n    this.setState(\r\n      state => ({ close: !state.close })\r\n    ); \r\n  }\r\n  render() {\r\n    return (\r\n      <nav\r\n        className=\"navbar is-fixed-top is-dark\"\r\n        role=\"navigation\"\r\n        aria-label=\"main navigation\"\r\n      >\r\n        <div className=\"navbar-brand\">\r\n          <Link className=\"navbar-item\" to=\"/rick-and-morty\">\r\n            <img className=\"\" src={images.icon} />\r\n            <div className=\"navbar-title\">\r\n              <div className=\"navbar-item\">\r\n                <h1 className=\"title outlined\">Rick and Morty Game</h1>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n          <a\r\n            role=\"button\"\r\n            className=\"navbar-burger\"\r\n            aria-label=\"menu\"\r\n            aria-expanded=\"false\"\r\n            data-target=\"navbar\"\r\n            onClick={() => this.handleClick()}\r\n          >\r\n            <span aria-hidden=\"true\" />\r\n            <span aria-hidden=\"true\" />\r\n            <span aria-hidden=\"true\" />\r\n          </a>\r\n        </div>\r\n        <div id=\"navbar\" className={`navbar-menu ${this.state.close ? 'is-active' : 'invisible'}`}>\r\n          <div className=\"navbar-start\">\r\n            <Link className=\"navbar-item\" to=\"/whats\">¿Qué es esto?</Link>\r\n            <Link className=\"navbar-item\" to=\"/how\">¿Cómo jugar?</Link>\r\n            <Link className=\"navbar-item\" to=\"/why\">Beneficios de jugar</Link>\r\n          </div>\r\n          <div className=\"navbar-end\">\r\n            <div className=\"navbar-item\">\r\n              <div className=\"buttons\">\r\n                <a className=\"button button-lineal small white\" target=\"_blank\" href=\"https://github.com/ivvan-stack/rick-and-morty\">\r\n                  <small>Acerca de</small>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"re-central--small full full-center\">\r\n            <div className=\"columns is-mobile\">\r\n                <div className=\"column is-half is-offset-one-quarter\">\r\n                    <h3 className=\"title is-4 text-center\">Cargando...</h3>\r\n                    <progress className=\"progress is-large is-dark\" max={100}></progress>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Loading;","import React, { Component } from \"react\";\r\n\r\nclass Whats extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"re-central content\">\r\n                <h1>Definicion de Memorama</h1>\r\n                <div>\r\n                    <p>Es un juego con una dinámica sencilla, fácil de comprender incluso por los más pequeños. Imprime un ambiente de emoción y suspenso entre los participantes. Pero no es solo la emoción lo que lo caracteriza.&nbsp;</p>\r\n                    <p><br />El <strong>memorama</strong> es un juego de encontrar pares de cartas con la misma figura. Debes encontrar dos cartas que sean iguales. Todas las cartas están boca abajo y puedes voltear dos, si logras formar un par entonces sigues tirando si no acaba tu turno, varias personas pueden jugar y entre más, es más divertido.</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Whats;","import React, { Component } from \"react\";\r\n\r\nclass How extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"re-central content\">\r\n                <h1>Desarrollo del juego</h1>\r\n                <div>\r\n                    <p>El juego comienza revolviendo las cartas y repartiéndolas con la figura hacia abajo al azar de tal modo que no sea posible ver la imagen que se encuentra en ellas.</p>\r\n                    <p>Un jugador escoge dos cartas, si las dos que escogió son iguales, se las queda consigo y tiene derecho a escoger otras dos; si las dos cartas que escogió son diferentes las coloca otra vez boca abajo en el mismo lugar y procura recordar cuales cartas eran, cediendo el turno a otro jugador.</p>\r\n                    <p>El siguiente jugador selecciona otra dos cartas, con la ventaja de que si puso atención a las dos figuras anteriores que le salieron a su compañero, selecciona primero una carta al azar y si se da cuenta de que la carta que seleccionó trae la misma figura que una de las cartas que su compañero había puesto anteriormente hacia abajo la escoge de tal modo que ya tiene un par, en caso contrario vuelve a dejar las cartas hacia abajo.</p>\r\n                    <p>Gana el jugador que consiga más pares de cartas. Este juego se puede jugar con dos o más participantes.</p>\r\n                    <p>El memorama es un juego de encontrar pares de cartas con la misma figura. Debes encontrar dos cartas que sean iguales. Todas las cartas están boca abajo y puedes voltear dos, si logras formar un par entonces sigues tirando si no acaba tu turno, varias personas pueden jugar y entre más, es más divertido Los juegos se llaman Memorama porque son juegos de memoria. Son juegos en dónde debes de recordar las imágenes y el lugar en el que estaban. Entre mejor seas recordando el juego te parecerá más fácil. Cuando compites contra otros debes de memorizar más para ganarles.</p>\r\n                    <p>Es posible que puedas descubrir las cartas al azar pero es difícil, muchos también optan por esa opción pero siempre les ganan los que se aprenden el lugar de las cartas. Si te preguntas por qué es tan difícil el memorama la respuesta es sencilla, entre más cartas haya más imágenes y lugares para recordar hay en el juego, así, entre un mayor número de cartas más difícil se hace.</p>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default How;","import React, { Component } from \"react\";\r\n\r\nclass Why extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"re-central content\">\r\n                <h1>ALGUNOS DE LOS BENEFICIOS SON:</h1>\r\n                <div>\r\n                    <p />\r\n                    <p>■ Mejora la concentración: realmente cada jugador debe tener sus ojos bien abiertos y eliminar los distractores para detectar las coincidencias entre las piezas y así armar las parejas. Sin duda, esto promoverá grandes beneficios en los jugadores. Ahora es más común que los niños estén cada vez más dispersos por tantos estímulos audiovisuales que reciben, así que un juego como este les ayudará a centrar su actividad cerebral y apuntalar sus esfuerzos.</p>\r\n                    <p />\r\n                    <p>■ Entrena la memoria visual: ¿a tu hijo le cuesta recordar lo que lee? No hay mejor solución para ayudarlo que estimular su memoria con este tipo de juego. La memoria visual es la que permite registrar aquellas cosas que han sido captadas por medio del sentido de la vista.</p>\r\n                    <p />\r\n                    <p>■ Aumenta la atención: el que se distrae en este juego, pierde. El estímulo de identificar parejas permite centralizar la atención y mantenerse enfocado.</p>\r\n                    <p />\r\n                    <p>■ Ayuda a pensar rápido: es un juego contrarreloj. Es necesario hacer relaciones de forma eficiente y acelerar la agilidad mental para que tanto los esfuerzos de concentración como de memoria visual rindan frutos.</p>\r\n                    <p />\r\n                    <p>Luego de conocer estos cuatro beneficios, un juego de memoria será indudablemente una de las mejores opciones no solo para entretener a los niños sino también para incluir en la lista de regalos.</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Why;","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\n//Components\r\nimport BuildDeck from \"./Utils/BuildDeck\";\r\nimport Board from \"./Components/Board\";\r\nimport Error from \"./Components/Error\";\r\nimport Header from \"./Components/Header\";\r\nimport Loading from \"./Components/Loading\";\r\n\r\n//Views\r\nimport Whats from \"./Views/Whats\";\r\nimport How from \"./Views/How\";\r\nimport Why from \"./Views/Why\";\r\n\r\nconst App = () => {\r\n  const cards = BuildDeck();\r\n\r\n  if(cards === 'loading') {\r\n    return (\r\n      <Loading />\r\n    )\r\n  } else if(cards === 'error') {\r\n    return (\r\n      <Error />\r\n    )\r\n  } else {\r\n    return (\r\n      <Router>\r\n      <Header/>\r\n      <Switch>\r\n        <Route path=\"/rick-and-morty\" exact>\r\n          <Board cards={cards} />\r\n        </Route>\r\n        <Route path=\"/whats\" exact>\r\n          <Whats />\r\n        </Route>\r\n        <Route path=\"/how\" exact>\r\n          <How />\r\n        </Route>\r\n        <Route path=\"/why\" exact>\r\n          <Why />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { ApolloProvider } from '@apollo/client'\r\nimport {client} from './Client'\r\n\r\n//SASS Stylesheets\r\nimport './scss/styles.scss';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}